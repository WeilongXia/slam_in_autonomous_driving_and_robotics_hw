#ifndef DRIVER_VELODYNE_VELODYNE_CONSTANT_H
#define DRIVER_VELODYNE_VELODYNE_CONSTANT_H

#include <unistd.h>
#include <limits>

#include "packet_data.h"

namespace driver {
namespace velodyne {
const int kDefultFiringDataPort = 2368;
const int kSocketPollTimeout = 1000;  // in msec

const size_t kPacketDataSize = 1206;
const size_t kSocketHeaderSize = 42;
const size_t kLaserPerFiring = 32;
const size_t kLaserPerFiring64 = 64;
const size_t kPerLaserByteSize = 3;
const size_t kFiringDataByteSize = kLaserPerFiring * kPerLaserByteSize;
const size_t kFiringPerPacket = 12;
const int kRotationMaxUnits = 36000;
const float kRotationResolution = 0.01;
const float kLaserDistanceResolutionVLP16 = 0.002;
const float kLaserDistanceResolutionVLP32 = 0.004;
const float kLaserDistanceResolutionVLPHDL32 = 0.002;
const float kLaserDistanceResolutionVLP64 = 0.002; 
const float kAngularResolution = 0.00300919;

const float kLaserHitFree = std::numeric_limits<float>::max();
const float kLaserHitEmpty = std::numeric_limits<float>::epsilon();

const std::unordered_map<uint8_t, std::string> SensorTypeName{
    {static_cast<uint8_t>(SensorType::UNKNOWN), "UNKNOWN"},
    {static_cast<uint8_t>(SensorType::HDL32E), "HDL32E"},
    {static_cast<uint8_t>(SensorType::VLP16), "VLP16"},
    {static_cast<uint8_t>(SensorType::VLP32AB), "VLP32AB"},
    {static_cast<uint8_t>(SensorType::VLP16HiRes), "VLP16HD"},
    {static_cast<uint8_t>(SensorType::VLP32C), "VLP32C"},
    {static_cast<uint8_t>(SensorType::VLP64), "VLP64"}};
const std::unordered_map<std::string, uint8_t> SensorTypeByName{
    {"UNKNOWN", static_cast<uint8_t>(SensorType::UNKNOWN)},
    {"HDL32E", static_cast<uint8_t>(SensorType::HDL32E)},
    {"VLP16", static_cast<uint8_t>(SensorType::VLP16)},
    {"VLP32AB", static_cast<uint8_t>(SensorType::VLP32AB)},
    {"VLP16HD", static_cast<uint8_t>(SensorType::VLP16HiRes)},
    {"VLP32C", static_cast<uint8_t>(SensorType::VLP32C)},
    {"VLP64", static_cast<uint8_t>(SensorType::VLP64)}};

const std::unordered_map<uint8_t, std::string> ReturnModeName{
    {static_cast<uint8_t>(ReturnModel::STRONGEST_RETURN), "Stringest_return"},
    {static_cast<uint8_t>(ReturnModel::LAST_RETURN), "Last_return"},
    {static_cast<uint8_t>(ReturnModel::DUAL_RETURN), "Dual_return"}};

const double INNER_TIME_16[12][32] = {
    {-1327.104, -1324.800, -1322.496, -1320.192, -1317.888, -1315.584,
     -1313.280, -1310.976, -1308.672, -1306.368, -1304.064, -1301.760,
     -1299.456, -1297.152, -1294.848, -1292.544, -1271.808, -1269.504,
     -1267.200, -1264.896, -1262.592, -1260.288, -1257.984, -1255.680,
     -1253.376, -1251.072, -1248.768, -1246.464, -1244.160, -1241.856,
     -1239.552, -1237.248},
    {-1216.512, -1214.208, -1211.904, -1209.600, -1207.296, -1204.992,
     -1202.688, -1200.384, -1198.080, -1195.776, -1193.472, -1191.168,
     -1188.864, -1186.560, -1184.256, -1181.952, -1161.216, -1158.912,
     -1156.608, -1154.304, -1152.000, -1149.696, -1147.392, -1145.088,
     -1142.784, -1140.480, -1138.176, -1135.872, -1133.568, -1131.264,
     -1128.960, -1126.656},
    {-1105.920, -1103.616, -1101.312, -1099.008, -1096.704, -1094.400,
     -1092.096, -1089.792, -1087.488, -1085.184, -1082.880, -1080.576,
     -1078.272, -1075.968, -1073.664, -1071.360, -1050.624, -1048.320,
     -1046.016, -1043.712, -1041.408, -1039.104, -1036.800, -1034.496,
     -1032.192, -1029.888, -1027.584, -1025.280, -1022.976, -1020.672,
     -1018.368, -1016.064},
    {-995.328, -993.024, -990.720, -988.416, -986.112, -983.808, -981.504,
     -979.200, -976.896, -974.592, -972.288, -969.984, -967.680, -965.376,
     -963.072, -960.768, -940.032, -937.728, -935.424, -933.120, -930.816,
     -928.512, -926.208, -923.904, -921.600, -919.296, -916.992, -914.688,
     -912.384, -910.080, -907.776, -905.472},
    {-884.736, -882.432, -880.128, -877.824, -875.520, -873.216, -870.912,
     -868.608, -866.304, -864.000, -861.696, -859.392, -857.088, -854.784,
     -852.480, -850.176, -829.440, -827.136, -824.832, -822.528, -820.224,
     -817.920, -815.616, -813.312, -811.008, -808.704, -806.400, -804.096,
     -801.792, -799.488, -797.184, -794.880},
    {-774.144, -771.840, -769.536, -767.232, -764.928, -762.624, -760.320,
     -758.016, -755.712, -753.408, -751.104, -748.800, -746.496, -744.192,
     -741.888, -739.584, -718.848, -716.544, -714.240, -711.936, -709.632,
     -707.328, -705.024, -702.720, -700.416, -698.112, -695.808, -693.504,
     -691.200, -688.896, -686.592, -684.288},
    {-663.552, -661.248, -658.944, -656.640, -654.336, -652.032, -649.728,
     -647.424, -645.120, -642.816, -640.512, -638.208, -635.904, -633.600,
     -631.296, -628.992, -608.256, -605.952, -603.648, -601.344, -599.040,
     -596.736, -594.432, -592.128, -589.824, -587.520, -585.216, -582.912,
     -580.608, -578.304, -576.000, -573.696},
    {-552.960, -550.656, -548.352, -546.048, -543.744, -541.440, -539.136,
     -536.832, -534.528, -532.224, -529.920, -527.616, -525.312, -523.008,
     -520.704, -518.400, -497.664, -495.360, -493.056, -490.752, -488.448,
     -486.144, -483.840, -481.536, -479.232, -476.928, -474.624, -472.320,
     -470.016, -467.712, -465.408, -463.104},
    {-442.368, -440.064, -437.760, -435.456, -433.152, -430.848, -428.544,
     -426.240, -423.936, -421.632, -419.328, -417.024, -414.720, -412.416,
     -410.112, -407.808, -387.072, -384.768, -382.464, -380.160, -377.856,
     -375.552, -373.248, -370.944, -368.640, -366.336, -364.032, -361.728,
     -359.424, -357.120, -354.816, -352.512},
    {-331.776, -329.472, -327.168, -324.864, -322.560, -320.256, -317.952,
     -315.648, -313.344, -311.040, -308.736, -306.432, -304.128, -301.824,
     -299.520, -297.216, -276.480, -274.176, -271.872, -269.568, -267.264,
     -264.960, -262.656, -260.352, -258.048, -255.744, -253.440, -251.136,
     -248.832, -246.528, -244.224, -241.920},
    {-221.184, -218.880, -216.576, -214.272, -211.968, -209.664, -207.360,
     -205.056, -202.752, -200.448, -198.144, -195.840, -193.536, -191.232,
     -188.928, -186.624, -165.888, -163.584, -161.280, -158.976, -156.672,
     -154.368, -152.064, -149.760, -147.456, -145.152, -142.848, -140.544,
     -138.240, -135.936, -133.632, -131.328},
    {-110.592, -108.288, -105.984, -103.680, -101.376, -99.072, -96.768,
     -94.464,  -92.160,  -89.856,  -87.552,  -85.248,  -82.944, -80.640,
     -78.336,  -76.032,  -55.296,  -52.992,  -50.688,  -48.384, -46.080,
     -43.776,  -41.472,  -39.168,  -36.864,  -34.560,  -32.256, -29.952,
     -27.648,  -25.344,  -23.040,  -20.736}

};

    const float INNER_AZIMUTH_16[2][16] = {
        {0, 0.833333, 1.66667, 2.5, 3.33333, 4.16667, 5, 5.83333, 6.66667, 7.5,
        8.33333, 9.16667, 10, 10.8333, 11.6667, 12.5},
        {20, 20.8333, 21.6667, 22.5, 23.3333, 24.1667, 25, 25.8333, 26.6667, 27.5,
        28.3333, 29.1667, 30, 30.8333, 31.6667, 32.5}
    };

    const double INNER_TIME_32C[12][32] = {
             {   -0,      -0,      -2.3,    -2.3,    -4.61,   -4.61,   -6.91,   -6.91,   -9.22,   -9.22,   -11.52,  -11.52,  -13.82,  -13.82,  -16.13,  -16.13,
                 -18.43,  -18.43,  -20.74,  -20.74,  -23.04,  -23.04,  -25.34,  -25.34,  -27.65,  -27.65,  -29.95,  -29.95,  -32.26,  -32.26,  -34.56,  -34.56
             },
             {
                 -55.3,   -55.3,   -57.6,   -57.6,   -59.9,   -59.9,   -62.21,  -62.21,  -64.51,  -64.51,  -66.82,  -66.82,  -69.12,  -69.12,  -71.42,  -71.42,
                 -73.73,  -73.73,  -76.03,  -76.03,  -78.34,  -78.34,  -80.64,  -80.64,  -82.94,  -82.94,  -85.25,  -85.25,  -87.55,  -87.55,  -89.86,  -89.86
             },
             {   -110.59, -110.59, -112.9,  -112.9,  -115.2,  -115.2,  -117.5,  -117.5,  -119.81, -119.81, -122.11, -122.11, -124.42, -124.42, -126.72, -126.72,
                 -129.02, -129.02, -131.33, -131.33, -133.63, -133.63, -135.94, -135.94, -138.24, -138.24, -140.54, -140.54, -142.85, -142.85, -145.15, -145.15
             },
             {
                 -165.89, -165.89, -168.19, -168.19, -170.5,  -170.5,  -172.8,  -172.8,  -175.1,  -175.1,  -177.41, -177.41, -179.71, -179.71, -182.02, -182.02,
                 -184.32, -184.32, -186.62, -186.62, -188.93, -188.93, -191.23, -191.23, -193.54, -193.54, -195.84, -195.84, -198.14, -198.14, -200.45, -200.45
             },
             {   -221.18, -221.18, -223.49, -223.49, -225.79, -225.79, -228.1,  -228.1,  -230.4,  -230.4,  -232.7,  -232.7,  -235.01, -235.01, -237.31, -237.31,
                 -239.62, -239.62, -241.92, -241.92, -244.22, -244.22, -246.53, -246.53, -248.83, -248.83, -251.14, -251.14, -253.44, -253.44, -255.74, -255.74,
             },
             {
                 -276.48, -276.48, -278.78, -278.78, -281.09, -281.09, -283.39, -283.39, -285.7,  -285.7,  -288,    -288,    -290.3,  -290.3,  -292.61, -292.61,
                 -294.91, -294.91, -297.22, -297.22, -299.52, -299.52, -301.82, -301.82, -304.13, -304.13, -306.43, -306.43, -308.74, -308.74, -311.04, -311.04
             },
             {   -331.78, -331.78, -334.08, -334.08, -336.38, -336.38, -338.69, -338.69, -340.99, -340.99, -343.3,  -343.3,  -345.6,  -345.6,  -347.9,  -347.9,
                 -350.21, -350.21, -352.51, -352.51, -354.82, -354.82, -357.12, -357.12, -359.42, -359.42, -361.73, -361.73, -364.03, -364.03, -366.34, -366.34
             },
             {
                 -387.07, -387.07, -389.38, -389.38, -391.68, -391.68, -393.98, -393.98, -396.29, -396.29, -398.59, -398.59, -400.9,  -400.9,  -403.2,  -403.2,
                 -405.5,  -405.5,  -407.81, -407.81, -410.11, -410.11, -412.42, -412.42, -414.72, -414.72, -417.02, -417.02, -419.33, -419.33, -421.63, -421.63
             },
             {   -442.37, -442.37, -444.67, -444.67, -446.98, -446.98, -449.28, -449.28, -451.58, -451.58, -453.89, -453.89, -456.19, -456.19, -458.5,  -458.5,
                 -460.8,  -460.8,  -463.1,  -463.1,  -465.41, -465.41, -467.71, -467.71, -470.02, -470.02, -472.32, -472.32, -474.62, -474.62, -476.93, -476.93
             },
             {
                 -497.66, -497.66, -499.97, -499.97, -502.27, -502.27, -504.58, -504.58, -506.88, -506.88, -509.18, -509.18, -511.49, -511.49, -513.79, -513.79,
                 -516.1,  -516.1,  -518.4,  -518.4,  -520.7,  -520.7,  -523.01, -523.01, -525.31, -525.31, -527.62, -527.62, -529.92, -529.92, -532.22, -532.22
             },
             {   -552.96, -552.96, -555.26, -555.26, -557.57, -557.57, -559.87, -559.87, -562.18, -562.18, -564.48, -564.48, -566.78, -566.78, -569.09, -569.09,
                 -571.39, -571.39, -573.7,  -573.7,  -576,    -576,    -578.3,  -578.3,  -580.61, -580.61, -582.91, -582.91, -585.22, -585.22, -587.52, -587.52
             },
             {
                 -608.26, -608.26, -610.56, -610.56, -612.86, -612.86, -615.17, -615.17, -617.47, -617.47, -619.78, -619.78, -622.08, -622.08, -624.38, -624.38,
                 -626.69, -626.69, -628.99, -628.99, -631.3,  -631.3,  -633.6,  -633.6,  -635.9,  -635.9,  -638.21, -638.21, -640.51, -640.51, -642.82, -642.82
             }
    };

const double INNER_TIME_64[12][32] = {
    {   419.30, 418.57, 417.84, 417.12, 416.39, 415.66, 414.93, 414.20,
        413.48, 412.75, 412.02, 411.29, 410.56, 409.84, 409.11, 408.38,
        407.65, 406.92, 406.20, 405.47, 404.74, 404.01, 403.28, 402.56,
        401.83, 401.10, 400.37, 399.64, 398.92, 398.19, 397.46, 396.73
    },
    {   419.30, 418.57, 417.84, 417.12, 416.39, 415.66, 414.93, 414.20,
        413.48, 412.75, 412.02, 411.29, 410.56, 409.84, 409.11, 408.38,
        407.65, 406.92, 406.20, 405.47, 404.74, 404.01, 403.28, 402.56,
        401.83, 401.10, 400.37, 399.64, 398.92, 398.19, 397.46, 396.73
    },
    {   396.00, 395.28, 394.55, 393.82, 393.09, 392.36, 391.64, 390.91,
        390.18, 389.45, 388.72, 388.00, 387.27, 386.54, 385.81, 385.08,
        384.36, 383.63, 382.90, 382.17, 381.44, 380.72, 379.99, 379.26,
        378.53, 377.80, 377.08, 376.35, 375.62, 374.89, 374.16, 373.44
    },
    {   396.00, 395.28, 394.55, 393.82, 393.09, 392.36, 391.64, 390.91,
        390.18, 389.45, 388.72, 388.00, 387.27, 386.54, 385.81, 385.08,
        384.36, 383.63, 382.90, 382.17, 381.44, 380.72, 379.99, 379.26,
        378.53, 377.80, 377.08, 376.35, 375.62, 374.89, 374.16, 373.44
    },
    {   372.71, 371.98, 371.25, 370.52, 369.80, 369.07, 368.34, 367.61,
        366.88, 366.16, 365.43, 364.70, 363.97, 363.24, 362.52, 361.79,
        361.06, 360.33, 359.60, 358.88, 358.15, 357.42, 356.69, 355.96,
        355.24, 354.51, 353.78, 353.05, 352.32, 351.60, 350.87, 350.14
    },
    {   372.71, 371.98, 371.25, 370.52, 369.80, 369.07, 368.34, 367.61,
        366.88, 366.16, 365.43, 364.70, 363.97, 363.24, 362.52, 361.79,
        361.06, 360.33, 359.60, 358.88, 358.15, 357.42, 356.69, 355.96,
        355.24, 354.51, 353.78, 353.05, 352.32, 351.60, 350.87, 350.14
    },
    {   349.41, 348.68, 347.96, 347.23, 346.50, 345.77, 345.04, 344.32,
        343.59, 342.86, 342.13, 341.40, 340.68, 339.95, 339.22, 338.49,
        337.76, 337.04, 336.31, 335.58, 334.85, 334.12, 333.40, 332.67,
        331.94, 331.21, 330.48, 329.76, 329.03, 328.30, 327.57, 326.84
    },
    {   349.41, 348.68, 347.96, 347.23, 346.50, 345.77, 345.04, 344.32,
        343.59, 342.86, 342.13, 341.40, 340.68, 339.95, 339.22, 338.49,
        337.76, 337.04, 336.31, 335.58, 334.85, 334.12, 333.40, 332.67,
        331.94, 331.21, 330.48, 329.76, 329.03, 328.30, 327.57, 326.84
    },
    {   326.12, 325.39, 324.66, 323.93, 323.20, 322.48, 321.75, 321.02,
        320.29, 319.56, 318.84, 318.11, 317.38, 316.65, 315.92, 315.20,
        314.47, 313.74, 313.01, 312.28, 311.56, 310.83, 310.10, 309.37,
        308.64, 307.92, 307.19, 306.46, 305.73, 305.00, 304.28, 303.55
    },
    {   326.12, 325.39, 324.66, 323.93, 323.20, 322.48, 321.75, 321.02,
        320.29, 319.56, 318.84, 318.11, 317.38, 316.65, 315.92, 315.20,
        314.47, 313.74, 313.01, 312.28, 311.56, 310.83, 310.10, 309.37,
        308.64, 307.92, 307.19, 306.46, 305.73, 305.00, 304.28, 303.55
    },
    {   302.82, 302.09, 301.36, 300.64, 299.91, 299.18, 298.45, 297.72,
        297.00, 296.27, 295.54, 294.81, 294.08, 293.36, 292.63, 291.90,
        291.17, 290.44, 289.72, 288.99, 288.26, 287.53, 286.80, 286.08,
        285.35, 284.62, 283.89, 283.16, 282.44, 281.71, 280.98, 280.25
    },
    {   302.82, 302.09, 301.36, 300.64, 299.91, 299.18, 298.45, 297.72,
        297.00, 296.27, 295.54, 294.81, 294.08, 293.36, 292.63, 291.90,
        291.17, 290.44, 289.72, 288.99, 288.26, 287.53, 286.80, 286.08,
        285.35, 284.62, 283.89, 283.16, 282.44, 281.71, 280.98, 280.25
    }
};

const double INNER_TIME_64E_S3[12][32] = {
    {   172.8, 171.5, 170.3, 169.1, 165.6, 164.3, 163.1, 161.9,
        158.4, 157.1, 155.9, 154.7, 151.2, 149.9, 148.7, 147.5,
        144,   142.7, 141.5, 140.3, 136.8, 135.5, 134.3, 133.1,
        129.6, 128.3, 127.1, 125.9, 122.4, 121.1, 119.9, 118.7
    },
    {   172.8, 171.5, 170.3, 169.1, 165.6, 164.3, 163.1, 161.9,
        158.4, 157.1, 155.9, 154.7, 151.2, 149.9, 148.7, 147.5,
        144,   142.7, 141.5, 140.3, 136.8, 135.5, 134.3, 133.1,
        129.6, 128.3, 127.1, 125.9, 122.4, 121.1, 119.9, 118.7
    },
    {   172.8, 171.5, 170.3, 169.1, 165.6, 164.3, 163.1, 161.9,
        158.4, 157.1, 155.9, 154.7, 151.2, 149.9, 148.7, 147.5,
        144,   142.7, 141.5, 140.3, 136.8, 135.5, 134.3, 133.1,
        129.6, 128.3, 127.1, 125.9, 122.4, 121.1, 119.9, 118.7
    },
    {   172.8, 171.5, 170.3, 169.1, 165.6, 164.3, 163.1, 161.9,
        158.4, 157.1, 155.9, 154.7, 151.2, 149.9, 148.7, 147.5,
        144,   142.7, 141.5, 140.3, 136.8, 135.5, 134.3, 133.1,
        129.6, 128.3, 127.1, 125.9, 122.4, 121.1, 119.9, 118.7
    },
    {   115.2, 113.9, 112.7, 111.5, 108,  106.7, 105.5, 104.3, 100.8, 99.5, 98.3,
        97.1,  93.6,  92.3,  91.1,  89.9, 86.4,  85.1,  83.9,  82.7,  79.2, 77.9,
        76.7,  75.5,  72,    70.7,  69.5, 68.3,  64.8,  63.5,  62.3,  61.1
    },
    {   115.2, 113.9, 112.7, 111.5, 108,  106.7, 105.5, 104.3, 100.8, 99.5, 98.3,
        97.1,  93.6,  92.3,  91.1,  89.9, 86.4,  85.1,  83.9,  82.7,  79.2, 77.9,
        76.7,  75.5,  72,    70.7,  69.5, 68.3,  64.8,  63.5,  62.3,  61.1
    },
    {   115.2, 113.9, 112.7, 111.5, 108,  106.7, 105.5, 104.3, 100.8, 99.5, 98.3,
        97.1,  93.6,  92.3,  91.1,  89.9, 86.4,  85.1,  83.9,  82.7,  79.2, 77.9,
        76.7,  75.5,  72,    70.7,  69.5, 68.3,  64.8,  63.5,  62.3,  61.1
    },
    {   115.2, 113.9, 112.7, 111.5, 108,  106.7, 105.5, 104.3, 100.8, 99.5, 98.3,
        97.1,  93.6,  92.3,  91.1,  89.9, 86.4,  85.1,  83.9,  82.7,  79.2, 77.9,
        76.7,  75.5,  72,    70.7,  69.5, 68.3,  64.8,  63.5,  62.3,  61.1
    },
    {   57.6, 56.3, 55.1, 53.9, 50.4, 49.1, 47.9, 46.7, 43.2, 41.9, 40.7,
        39.5, 36,   34.7, 33.5, 32.3, 28.8, 27.5, 26.3, 25.1, 21.6, 20.3,
        19.1, 17.9, 14.4, 13.1, 11.9, 10.7, 7.2,  5.9,  4.7,  3.5
    },
    {   57.6, 56.3, 55.1, 53.9, 50.4, 49.1, 47.9, 46.7, 43.2, 41.9, 40.7,
        39.5, 36,   34.7, 33.5, 32.3, 28.8, 27.5, 26.3, 25.1, 21.6, 20.3,
        19.1, 17.9, 14.4, 13.1, 11.9, 10.7, 7.2,  5.9,  4.7,  3.5
    },
    {   57.6, 56.3, 55.1, 53.9, 50.4, 49.1, 47.9, 46.7, 43.2, 41.9, 40.7,
        39.5, 36,   34.7, 33.5, 32.3, 28.8, 27.5, 26.3, 25.1, 21.6, 20.3,
        19.1, 17.9, 14.4, 13.1, 11.9, 10.7, 7.2,  5.9,  4.7,  3.5
    },
    {   57.6, 56.3, 55.1, 53.9, 50.4, 49.1, 47.9, 46.7, 43.2, 41.9, 40.7,
        39.5, 36,   34.7, 33.5, 32.3, 28.8, 27.5, 26.3, 25.1, 21.6, 20.3,
        19.1, 17.9, 14.4, 13.1, 11.9, 10.7, 7.2,  5.9,  4.7,  3.5
    }
};

const int ORDER_64[64] = {38, 39, 42, 43, 32, 33, 36, 37, 40, 41, 46, 47, 50,
                          51, 54, 55, 44, 45, 48, 49, 52, 53, 58, 59, 62, 63,
                          34, 35, 56, 57, 60, 61, 6,  7,  10, 11, 0,  1,  4,
                          5,  8,  9,  14, 15, 18, 19, 22, 23, 12, 13, 16, 17,
                          20, 21, 26, 27, 30, 31, 2,  3,  24, 25, 28, 29
                         };

}  // namespace velodyne
}  // namespace driver
#endif  // DRIVER_VELODYNE_VELODYNE_CONSTANT_H
